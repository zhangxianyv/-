<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.APIlog.dao.APILogDao">

	<select id="get" resultType="com.bootdo.APIlog.domain.LogDO">
		select `log_id`,`user_name`,`password`,`api_code`,`return_code`,`return_msg`,`update_time` from api_log where log_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.APIlog.domain.LogDO">
		select `log_id`,`user_name`,`password`,`api_code`,`return_code`,`return_msg`,`update_time` from api_log
        <where>  
		  		  <if test="logId != null and logId != ''"> and log_id = #{logId} </if>
		  		  <if test="userName != null and userName != ''"> and user_name = #{userName} </if>
		  		  <if test="password != null and password != ''"> and password = #{password} </if>
		  		  <if test="apiCode != null and apiCode != ''"> and api_code = #{apiCode} </if>
		  		  <if test="returnCode != null and returnCode != ''"> and return_code = #{returnCode} </if>
		  		  <if test="returnMsg != null and returnMsg != ''"> and return_msg = #{returnMsg} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by log_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from api_log
		 <where>  
		  		  <if test="logId != null and logId != ''"> and log_id = #{logId} </if>
		  		  <if test="userName != null and userName != ''"> and user_name = #{userName} </if>
		  		  <if test="password != null and password != ''"> and password = #{password} </if>
		  		  <if test="apiCode != null and apiCode != ''"> and api_code = #{apiCode} </if>
		  		  <if test="returnCode != null and returnCode != ''"> and return_code = #{returnCode} </if>
		  		  <if test="returnMsg != null and returnMsg != ''"> and return_msg = #{returnMsg} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.APIlog.domain.LogDO">
		insert into api_log
		(
			`log_id`, 
			`user_name`, 
			`password`, 
			`api_code`, 
			`return_code`, 
			`return_msg`, 
			`update_time`
		)
		values
		(
			uuid(),
			#{userName}, 
			#{password}, 
			#{apiCode}, 
			#{returnCode}, 
			#{returnMsg}, 
			#{updateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.APIlog.domain.LogDO">
		update api_log 
		<set>
			<if test="userName != null">`user_name` = #{userName}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="apiCode != null">`api_code` = #{apiCode}, </if>
			<if test="returnCode != null">`return_code` = #{returnCode}, </if>
			<if test="returnMsg != null">`return_msg` = #{returnMsg}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where log_id = #{logId}
	</update>
	
	<delete id="remove">
		delete from api_log where log_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from api_log where log_id in 
		<foreach item="logId" collection="array" open="(" separator="," close=")">
			#{logId}
		</foreach>
	</delete>

</mapper>